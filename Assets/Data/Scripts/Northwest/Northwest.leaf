#basePath   Northwest

:: Northwest
@trigger    LevelOneFinished
@evalPriority   100
@once

$call Wait(1)

$call argoTowerSocket->SetLocked(true)
$call argoHelpButton->SetButtonLocked(true)

$call map->SetTexture(0)

$call fader->FadeIn(4.0, 2.0)
{@Argo #happy} {poses 3.0:} Ah, a beautiful day on the ice! Good morning, partner! Good morning, Rae! $[ah_a_beautiful]
{@Rae} Morning, ARGO. $[morning_argo]
{@Alex} Um… hi. I’m here, too. $[um_hi_im]
{@MissionControl} Otter Three, We can give you a four-hour window, Wind gusts up to 20 knots are expected later today. $[otter_three_we]
{@Rae} Ha. 20 knots? Easy peasy. I could fly through that with my eyes closed. $[ha_twenty_knots]
{@Alex} Um… eyes open would be better, if you don’t mind. Argo, what’s the status of the station?  $[um_eyes_open]
{@Argo #focus} {poses 3.5:} Scanning… scanning…  The damage is not too bad!  Just a broken, battery, data logger, and sensor! $[scanning_scanning_the]
{@Alex} What? You said it wasn’t too bad. $[what_you_said]

$if PuzzleIsNotComplete(dataLoggerPuzzle)

$call argoHelpButton->SetCurrentClip(15)
$call argoHelpButton->SetButtonLocked(false)
{@Argo #serious} {poses 2.9:} Bad is a matter of perspective. We just need to repair the data connections in the logger. Seems easy enough, see if you can figure it out Matt. $[bad_is_a]

$if NotIsGrabbed(dataLoggerDoor)
$call dataLoggerDoor->ShowHighlight()
$while DoorWasNotGrabbed(dataLoggerDoor)
$call Wait(1)
$endwhile
$call dataLoggerDoor->StopHighlight()
$endif

$call loggerPieceOne->ShowHighlight()
$call loggerPieceTwo->ShowHighlight()
$call loggerPieceThree->ShowHighlight()
$call loggerPieceFour->ShowHighlight()
$call loggerPieceFive->ShowHighlight()
$call loggerPieceSix->ShowHighlight()

$while PuzzleIsNotComplete(dataLoggerPuzzle)
$call Wait(1)
$if IsGrabbed(loggerPieceOne)
$call loggerPieceOne->StopHighlight()
$endif
$if IsGrabbed(loggerPieceTwo)
$call loggerPieceTwo->StopHighlight()
$endif
$if IsGrabbed(loggerPieceThree)
$call loggerPieceThree->StopHighlight()
$endif
$if IsGrabbed(loggerPieceFour)
$call loggerPieceFour->StopHighlight()
$endif
$if IsGrabbed(loggerPieceFive)
$call loggerPieceFive->StopHighlight()
$endif
$if IsGrabbed(loggerPieceSix)
$call loggerPieceSix->StopHighlight()
$endif
$endwhile
$call argoHelpButton->SetButtonLocked(true)

$endif

$call batterySnowSocket->SetLocked(false)

$call loggerPieceOne->StopHighlight()
$call loggerPieceTwo->StopHighlight()
$call loggerPieceThree->StopHighlight()
$call loggerPieceFour->StopHighlight()
$call loggerPieceFive->StopHighlight()
$call loggerPieceSix->StopHighlight()

$call snowTowerSocket->SetLocked(false)
$call snowSensor->ShowHighlight()
$call snowSensor->PlayFX()
$call snowSensor->PlaySound()
$call snowSensor->SetGrabbable(true)
$call snowSledSocket->PlayFX()
$call snowSledSocket->SetLocked(false)
$call batterySledSocket->PlayFX()
$call batterySledSocket->SetLocked(false)
$call batteryBase->ShowHighlight()
$call batteryBase->PlayFX()
$call batteryBase->PlaySound()
$call batteryBase->SetGrabbable(true)

{@Argo #celebrate} {poses 1.1:} Great! We’ll have to fix the battery and sensor in the repair unit, place them both in the sled! $[great_well_have]

$call argoHelpButton->SetCurrentClip(16)
$call argoHelpButton->SetButtonLocked(false)

$while NotIsSocketed(snowSledSocket), NotIsSocketed(batterySledSocket)
$call Wait(1)
$endwhile

$if IsSocketed(snowSledSocket)
$call snowSledSocket->StopFX()
$call snowSensor->StopHighlight()
$call snowSensor->StopFX()
$call snowSensor->StopSound()
$while NotIsSocketed(batterySledSocket)
$call Wait(1)
$endwhile
$endif

$if IsSocketed(batterySledSocket)
$call batterySledSocket->StopFX()
$call batteryBase->StopHighlight()
$call batteryBase->StopFX()
$call batteryBase->StopSound()
$while NotIsSocketed(snowSledSocket)
$call Wait(1)
$endwhile
$endif

$call argoHelpButton->SetButtonLocked(true)

$call snowSensor->StopHighlight()
$call snowSensor->StopFX()
$call snowSledSocket->StopFX()
$call snowSensor->StopSound()

$call batterySledSocket->StopFX()
$call batteryBase->StopHighlight()
$call batteryBase->StopFX()
$call batteryBase->StopSound()

$call argo->SetGrabbable(true)
$call argo->PlayFX()
$call argoTowerSocket->SetLocked(false)
$call argoSled->PlayFX()
$call argoSled->PlaySound()

$if NotIsSocketed(argoSled)
{@Argo} Nice Job, now put me in and let’s get fixin! $[nice_job_now]
$call argoHelpButton->SetCurrentClip(17)
$call argoHelpButton->SetButtonLocked(false)
$while NotIsSocketed(argoSled)
$call Wait(1)
$endwhile
$call argoHelpButton->SetButtonLocked(true)
$endif

$set global:northwest-all-socketed = false
$while global:northwest-all-socketed != true
    $set global:northwest-all-socketed = true
    $if NotIsSocketed(argoSled)
        $set global:northwest-all-socketed = false
    $endif
    $if NotIsSocketed(snowSledSocket)
        $set global:northwest-all-socketed = false
    $endif
    $if NotIsSocketed(batterySledSocket)
        $set global:northwest-all-socketed = false
    $endif
    $if global:northwest-all-socketed != true
        $call Wait(1)
    $else
        $call argoSled->SetLocked(true)
        $call snowSledSocket->SetLocked(true)
        $call batterySledSocket->SetLocked(true)
    $endif
$endwhile

$call snowSledSocket->StopFX()
$call batterySledSocket->StopFX()
$call argo->StopFX()
$call argoSled->StopSound()
$call argoSled->StopFX()

$call fader->FadeOut(3.0)
$call Wait(4)
// free argo to be placed in interior
$call argoSled->SetLocked(false)
$call playerLocation->Teleport()
$call Wait(4)
$call fader->FadeIn(3.0, 1.0)

$call Wait(3)

$call trashChute->SetGrabbable(true)

$call snowSledSocket->SetLocked(false)
$call batterySledSocket->SetLocked(false)

{@Argo} So, first things first, let’s get the battery box and sensor onto our workbench. $[so_first_things]

$call snowSensor->SetWasGrabbed(false)
$call batteryBase->SetWasGrabbed(false)

$call snowSensor->ShowHighlight()
$call snowSensor->PlayFX()
$call batteryBase->ShowHighlight()
$call batteryBase->PlayFX()

$while NotWasGrabbed(snowSensor), NotWasGrabbed(batteryBase)
$call Wait(1)
$endwhile

$if WasGrabbed(snowSensor)

$call snowSensor->StopHighlight()
$call snowSensor->StopFX()

$if NotIsSocketed(snowBaySocket)
{@Argo} Place the sensor in the calibration dock on the right side of the bench. $[place_the_sensor]
$call snowSensorBay->ShowHighlight()
$call snowSensorBay->PlayFX()
$while NotIsSocketed(snowBaySocket)
$call Wait(1)
$endwhile
$call snowSensorBay->StopHighlight()
$call snowSensorBay->StopFX()
$call snowSensor->StopFX()
$endif

$while NotWasGrabbed(batteryBase)
$call Wait(1)
$endwhile

$endif

$if WasGrabbed(batteryBase)

$call batteryBase->StopHighlight()
$call batteryBase->StopFX()

$if NotIsSocketed(batteryBaySocket)
{@Argo} Pop the battery box in the middle of the workbench. $[pop_the_battery]
$call batteryBay->ShowHighlight()
$call batteryBay->PlayFX()
$while NotIsSocketed(batteryBaySocket)
$call Wait(1)
$endwhile
$call batteryBay->StopHighlight()
$call batteryBay->StopFX()
$endif

$call batteryBaySocket->LockBase(true)
$call batteryBaySocket->OpenCover()

$if NotIsSocketed(snowBaySocket)

$if NotWasGrabbed(snowSensor)
$while NotWasGrabbed(snowSensor)
$call Wait(1)
$endwhile
{@Argo} Place the sensor in the calibration dock on the right side of the bench. $[place_the_sensor_two]
$call snowSensorBay->ShowHighlight()
$call snowSensorBay->PlayFX()

$while NotIsSocketed(snowBaySocket)
$call Wait(1)
$endwhile

$call snowSensorBay->StopHighlight()
$call snowSensorBay->StopFX()
$endif

$endif

$call snowSensor->StopFX()
$call snowSensor->StopHighlight()

$endif

//now both are socketed...
$call batteryOne->PlayFX()
$call batteryOne->ShowHighlight()
$call batteryTwo->PlayFX()
$call batteryTwo->ShowHighlight()
$call batteryThree->PlayFX()
$call batteryThree->ShowHighlight()

$call batteryBase->SetGrabbable(false)

{@Argo} OK, we need to craft a new battery, check your inventory for a baseplate. $[ok_we_need]

$while NotWasGrabbed(batteryOne), NotWasGrabbed(batteryTwo), NotWasGrabbed(batteryThree)
$call Wait(1)
$endwhile

$if WasGrabbed(batteryOne)
$call batteryOne->StopFX()
$call batteryOne->StopHighlight()
$endif

$if WasGrabbed(batteryTwo)
$call batteryTwo->StopFX()
$call batteryTwo->StopHighlight()
$endif

$if WasGrabbed(batteryThree)
$call batteryThree->StopFX()
$call batteryThree->StopHighlight()
$endif

{@Argo} Great! pop it in the battery box to see if it’s the right kind! $[great_pop_it]

$while NotIsPuzzleSocketed(batterySocket)
$call Wait(1)
$endwhile

$while IsNotMatched(batterySocket)

$if WasGrabbed(batteryOne)
$call batteryOne->StopFX()
$call batteryOne->StopHighlight()
$endif

$if WasGrabbed(batteryTwo)
$call batteryTwo->StopFX()
$call batteryTwo->StopHighlight()
$endif

$if WasGrabbed(batteryThree)
$call batteryThree->StopFX()
$call batteryThree->StopHighlight()
$endif

$if NotIsPuzzleSocketed(batterySocket)
$while NotIsPuzzleSocketed(batterySocket)
$call Wait(1)
$endwhile
$endif

$if IsNotMatched(batterySocket)

{@Argo} Hmm, it looks like this would supply too much power. Try a different one. $[hmm_it_looks]

$while IsPuzzleSocketed(batterySocket)
$call Wait(1)
$endwhile

$while NotIsGrabbed(batteryOne), NotIsGrabbed(batteryTwo), NotIsGrabbed(batteryThree)
$call Wait(1)
$endwhile

$endif
$endwhile

$call batteryOne->StopFX()
$call batteryOne->StopHighlight()

$call batteryThree->StopFX()
$call batteryThree->StopHighlight()

$call cellOne->ShowHighlight()
$call cellTwo->ShowHighlight()
$call cellThree->ShowHighlight()
$call cellFour->ShowHighlight()
$call cellOne->PlayFX()
$call cellTwo->PlayFX()
$call cellThree->PlayFX()
$call cellFour->PlayFX()

{@Argo} This looks like the right one! Now we just need to power add cells, those are in your inventory as well. $[this_looks_like]

$while PuzzleIsNotComplete(batteryPuzzle)

$if WasGrabbed(cellOne)
$call cellOne->StopHighlight()
$call cellOne->StopFX()
$endif

$if WasGrabbed(cellTwo)
$call cellTwo->StopHighlight()
$call cellTwo->StopFX()
$endif

$if WasGrabbed(cellThree)
$call cellThree->StopHighlight()
$call cellThree->StopFX()
$endif

$if WasGrabbed(cellFour)
$call cellFour->StopHighlight()
$call cellFour->StopFX()
$endif

$call Wait(1)
$endwhile

$call cellOne->StopHighlight()
$call cellTwo->StopHighlight()
$call cellThree->StopHighlight()
$call cellFour->StopHighlight()
$call cellOne->StopFX()
$call cellTwo->StopFX()
$call cellThree->StopFX()
$call cellFour->StopFX()

$call batteryBaySocket->CloseCover()
$call batteryBaySocket->SetLocked(false)

// prevent player from grabbing battery internals
$call batterySocket->SetLocked(true)
$call batteryTwo->SetSocketsLocked(true)

$call batteryBase->SetGrabbable(true)

$call batteryBase->ShowHighlight()
$call batteryBase->PlayFX()
$call batterySledSocket->PlayFX()

{@Argo} Nice! Now that that’s finished, let’s put it in the sled and move onto the sensor $[nice_now_that]

$while NotIsSocketed(batterySledSocket)
$call Wait(1)
$endwhile

$call batteryTwo->StopHighlight()
$call batteryTwo->StopFX()
$call batterySledSocket->StopFX()
$call batteryBase->StopHighlight()
$call batteryBase->StopFX()

{@Argo} Ok, all we have left is the temperature sensor. See if you can recalibrate it by completing the signal sequence $[ok_all_we]

$call argoHelpButton->SetCurrentClip(18)
$call argoHelpButton->SetButtonLocked(false)

$while PuzzleIsNotComplete(snowPuzzle)
$call Wait(1)
$endwhile

$call argoHelpButton->SetButtonLocked(true)

{@Argo} Nice! $[nice_nice_nice]

$call snowSensor->ShowHighlight()
$call snowSensor->PlayFX()
$call snowSledSocket->PlayFX()

$while NotIsSocketed(snowSledSocket)
$call Wait(1)
$endwhile

$call snowSensor->StopHighlight()
$call snowSensor->StopFX()
$call snowSledSocket->StopFX()

$if NotIsSocketed(argoSled)
    $call argo->PlayFX()
    $call argo->ShowHighlight()
    $call argoSled->PlayFX()
    {@Argo} Ok, put it and me in the sled and let’s get out on the ice. $[ok_put_it]
    $call argoHelpButton->SetCurrentClip(3)
    $call argoHelpButton->SetButtonLocked(false)
    $while NotIsSocketed(argoSled)
        $call Wait(1)
    $endwhile
    $call argo->StopFX()
    $call argo->StopHighlight()
    $call argoSled->StopFX()
    $call argoHelpButton->SetButtonLocked(true)
$endif

$set global:northwest-all-socketed = false
$while global:northwest-all-socketed != true
    $set global:northwest-all-socketed = true
    $if NotIsSocketed(argoSled)
        $set global:northwest-all-socketed = false
    $endif
    $if NotIsSocketed(snowSledSocket)
        $set global:northwest-all-socketed = false
    $endif
    $if NotIsSocketed(batterySledSocket)
        $set global:northwest-all-socketed = false
    $endif
    $if global:northwest-all-socketed != true
        $call Wait(1)
    $else
        $call argoSled->SetLocked(true)
        $call snowSledSocket->SetLocked(true)
        $call batterySledSocket->SetLocked(true)
    $endif
$endwhile

$call fader->FadeOut(3.0)
$call Wait(4)
$call argoSled->SetLocked(false)
$call playerLocation->Teleport()
$call Wait(4)
$call fader->FadeIn(3.0, 1.0)


$call snowTowerSocket->ShowHighlight()
$call snowTowerSocket->PlayFX()
$call batterySnowSocket->PlayFX()
$call snowSensor->PlayFX()
$call batteryBase->PlayFX()

$call argoSled->SetLocked(false)
$call snowSledSocket->SetLocked(false)
$call batterySledSocket->SetLocked(false)

{@Argo} Now we just need to put the battery and the sensor back on the tower. $[now_we_just]

{@MissionControl} Be advised, Otter Three, wind gusts are now predicted to reach thirty knots $[be_advised_otter]
{@Rae} Acknowledged $[acknowledged_acknowledged_acknowledged]

$while NotIsSocketed(snowTowerSocket), NotIsSocketed(batterySnowSocket)
$call Wait(1)
$endwhile

$if NotIsSocketed(batterySnowSocket)
$call snowTowerSocket->StopHighlight()
$call snowTowerSocket->StopFX()
$call snowSensor->StopFX()

$while NotIsSocketed(batterySnowSocket)
$call Wait(1)
$endwhile
$call batterySnowSocket->StopFX()
$call batteryBase->StopFX()
$call batteryBase->StopHighlight()
$endif

$if NotIsSocketed(snowTowerSocket)
$call batterySnowSocket->StopFX()
$call batteryBase->StopFX()
$call batteryBase->StopHighlight()
$while NotIsSocketed(snowTowerSocket)
$call Wait(1)
$endwhile
$call snowTowerSocket->StopHighlight()
$call snowTowerSocket->StopFX()
$call snowSensor->StopFX()
$endif

$call batterySnowSocket->StopFX()
$call batteryBase->StopFX()
$call batteryBase->StopHighlight()
$call snowSensor->StopFX()
$call snowSensor->StopHighlight()
$call snowTowerSocket->StopHighlight()
$call snowTowerSocket->StopFX()

{@Argo} Nice work partner! $[nice_work_partner]
{@MissionControl} Come in, Otter Three. Wind speeds are starting to pick up at your coordinates. Better pick up the pace. $[come_in_otter]

$call argoSled->PlayFX()
$call argoSled->PlaySound()
$call argo->PlayFX()

$if NotIsSocketed(argoSled)
{@Argo} Ok, put me in the sled, let’s test our uplink. $[ok_put_me]
$call argoHelpButton->SetCurrentClip(17)
$call argoHelpButton->SetButtonLocked(false)
$while NotIsSocketed(argoSled)
$call Wait(1)
$endwhile
$call argoHelpButton->SetButtonLocked(true)
$endif

$set global:northwest-all-socketed = false
$while global:northwest-all-socketed != true
    $set global:northwest-all-socketed = true
    $if NotIsSocketed(argoSled)
        $set global:northwest-all-socketed = false
    $endif
    $if NotIsSocketed(batterySnowSocket)
        $set global:northwest-all-socketed = false
    $endif
    $if NotIsSocketed(snowTowerSocket)
        $set global:northwest-all-socketed = false
    $endif
    $if global:northwest-all-socketed != true
        $call Wait(1)
    $else
        $call argoSled->SetLocked(true)
        $call batterySnowSocket->SetLocked(true)
        $call snowTowerSocket->SetLocked(true)
    $endif
$endwhile

$call argo->StopFX()
$call argoSled->StopFX()
$call argoSled->StopSound()

$call fader->FadeOut(3.0)
$call Wait(4)
$call argoSled->SetLocked(false)
$call playerLocation->Teleport()
$call Wait(4)
$call fader->FadeIn(2.0, 1.0)

$call argoSled->SetLocked(false)
$call batterySnowSocket->SetLocked(false)
$call snowTowerSocket->SetLocked(false)

$call uplinkButton->ShowHighlight()
$call uplinkButton->PlayFX()

$call argoHelpButton->SetButtonLocked(false)
$call argoHelpButton->SetCurrentClip(14)
$while ButtonNotPressed(uplinkButton)
$call Wait(1)
$endwhile
$call argoHelpButton->SetButtonLocked(true)

$call uplinkButton->StopHighlight()
$call uplinkButton->StopFX()
$call uplinkButton->SetButtonPressed(false)

$call uplink->SetTexture(0)
$call Wait(1)

$call map->NextTexture()
$call Wait(1)
$call map->NextTexture()
$call Wait(1)
$call uplink->NextTexture()
$call Wait(0.1)
$call uplink->NextTexture()
$call Wait(0.1)
$call uplink->NextTexture()
$call Wait(0.1)
$call uplink->NextTexture()
$call Wait(0.1)
$call uplink->NextTexture()
$call Wait(0.1)
$call uplink->NextTexture()
$call Wait(0.1)
$call uplink->NextTexture()
$call Wait(0.1)
$call uplink->NextTexture()
$call Wait(0.1)
$call uplink->SetTexture(0)
$call Wait(0.1)
$call map->NextTexture()
{@Argo} The Phoenix station is up and running again! $[the_phoenix_station]

$call Wait(2)
$call map->NextTexture()

{@Rae} Ok Mission Control, the Tower is transmitting, we’re outta here! $[ok_mission_control]

$call fader->FadeOut(4.0)
$call Wait(4)
$call argoSled->SetLocked(false)
$call playerLocation->Teleport()
$call batterySocket->SetLocked(false)
$call batteryTwo->SetSocketsLocked(false)
$call Wait(2)
$call levelLoader->LoadSouth()