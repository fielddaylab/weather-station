#basePath   AfterWindSensor

:: Introduction
@trigger    WindSensorComplete
@evalPriority   100
@once

$call propM->StopFX()
$call propM->StopHighlight()

$call windSensorSled->PlayFX()
$call windSensorSled->PlaySound()
$call windSensor->ShowHighlight()
$call windSensor->PlaySound()
$call windSensor->PlayFX()
$call argoSled->PlayFX()
$call argoSled->PlaySound()
$call argo->PlayFX()

$if NotIsSocketed(windSensorSled)
{@Argo} Great, now place it in the sled. $[argo_great_now]
$call argo->SetCurrentClip(12)
$while NotIsSocketed(windSensorSled)
$call Wait(1)
$endwhile
$call argo->SetButtonLocked(true)
$endif

$call windSensorSled->StopFX()
$call windSensorSled->StopSound()
$call windSensor->StopHighlight()
$call windSensor->StopSound()
$call windSensor->StopFX()


$if NotIsSocketed(argoSled)
{@Argo} Perfect, now you know the drill, toss me in the sled as well. $[perfect_no_you]
$call argo->SetCurrentClip(13)
$call argo->SetButtonLocked(false)
$while NotIsSocketed(argoSled)
$call Wait(1)
$endwhile
$call argo->SetButtonLocked(true)
$endif

$call argo->StopFX()
$call argoSled->StopFX()
$call argoSled->StopSound()

$call fader->FadeOut(3.0)
$call Wait(4)
$call playerLocation->Teleport()
$call Wait(4)
$call fader->FadeIn(2.0, 1.0)

$call windSensorSocket->ShowHighlight()
$call windSensorSocket->PlayFX()
$call windSensorSocket->PlaySound()
$call windSensor->ShowHighlight()
$call windSensor->PlaySound()
$call windSensor->PlayFX()

$if NotIsSocketed(windSensorSocket)
{@Argo} Ok ok, put the wind sensor back on the tower and we should be good to go! $[argo_ok_ok]
$call argo->SetCurrentClip(14)
$call argo->SetButtonLocked(false)
$while NotIsSocketed(windSensorSocket)
$call Wait(1)
$endwhile
$call argo->SetButtonLocked(true)
$endif

$call windSensorSocket->StopHighlight()
$call windSensorSocket->StopFX()
$call windSensorSocket->StopSound()
$call windSensor->StopHighlight()
$call windSensor->StopSound()
$call windSensor->StopFX()
$call windSensorSocket->SetLocked(true)

$call argoSled->PlayFX()
$call argoSled->PlaySound()
$call argo->PlayFX()

$if NotIsSocketed(argoSled)
{@Argo} Great! Now pop me in the sled, let's test our Data uplink and make sure the tower is transmitting data! $[argo_great_nowpop]

$call argo->SetButtonLocked(false)
$while NotIsSocketed(argoSled)
$call Wait(1)
$endwhile
$call argo->SetButtonLocked(true)
$endif

$call argo->StopFX()
$call argoSled->StopFX()
$call argoSled->StopSound()

$call fader->FadeOut(3.0)
$call Wait(4)
$call playerLocation->Teleport()
$call Wait(4)
$call fader->FadeIn(2.0, 1.0)

$call uplinkButton->ShowHighlight()
$call uplinkButton->PlayFX()

{@Argo} Ok, let's take a look at the map. See that button below? We need to press that to test the towerâ€™s data uplink. Press it to run the test. $[argo_ok_lets]
$call argo->SetButtonLocked(false)
$call argo->SetCurrentClip(15)
$while ButtonNotPressed(uplinkButton)
$call Wait(1)
$endwhile
$call argo->SetButtonLocked(true)

$call uplinkButton->StopHighlight()
$call uplinkButton->StopFX()

$call map->NextTexture()

{@Argo} Ugh, I always get so nervous at this part... progress bars are so anxiety inducing. $[argo_ugh_i]

$call Wait(2)
$call map->NextTexture()
{@Argo} Hooray! See there was nothing to be concerned about. $[argo_hooray_see]
$call Wait(2)
$call map->NextTexture()

{@Argo} The repair is complete! Mount Rea station is transmitting data again. Excellent work! $[argo_the_repair]
{@Alex} Great. Let's get out of here. It's cribbage night back at McMurdo. $[alex_great_lets]
{@Rae} Every night is cribbage night back at McMurdo station. $[rae_every_night]
$call fader->FadeOut(10.0)
$call Wait(4)
$call playerLocation->Teleport()
$call Wait(4)
$call levelLoader->LoadNorthwest()
